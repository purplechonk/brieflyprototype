steps:
  # Build the news collector image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/news-collector', '-f', 'news-collector/Dockerfile', './news-collector']
  
  # Push the news collector image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/news-collector']
  
  # Deploy news collector to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'news-collector'
      - '--image'
      - 'gcr.io/$PROJECT_ID/news-collector'
      - '--region'
      - 'europe-west1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--set-env-vars'
      - 'EVENT_REGISTRY_API_KEY=${_EVENT_REGISTRY_API_KEY},DATABASE_URL=${_DATABASE_URL}'

  # Build the Telegram bot image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/brieflyprototype', '-f', 'telegram-bot/Dockerfile', './telegram-bot']
  
  # Push the Telegram bot image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/brieflyprototype']
  
  # Deploy Telegram bot to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'brieflyprototype'
      - '--image'
      - 'gcr.io/$PROJECT_ID/brieflyprototype'
      - '--region'
      - 'europe-west1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--set-env-vars'
      - 'TELEGRAM_BOT_TOKEN=${_TELEGRAM_BOT_TOKEN},DATABASE_URL=${_DATABASE_URL}'

images:
  - 'gcr.io/$PROJECT_ID/news-collector'
  - 'gcr.io/$PROJECT_ID/brieflyprototype' 