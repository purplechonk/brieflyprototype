options:
  logging: CLOUD_LOGGING_ONLY

steps:
  # Build the news collector service
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/news-collector', '-f', 'news-collector/Dockerfile', '.']

  # Push the news collector image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/news-collector']

  # Deploy news collector to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'briefly-news-collector'
      - '--image'
      - 'gcr.io/$PROJECT_ID/news-collector'
      - '--region'
      - 'europe-west1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--set-env-vars'
      - 'EVENT_REGISTRY_API_KEY=${_EVENT_REGISTRY_API_KEY},DATABASE_URL=${_DATABASE_URL}'

  # Build the telegram bot service
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/telegram-bot', './telegram-bot']
    dir: 'telegram-bot'

  # Push the telegram bot image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/telegram-bot']

  # Deploy telegram bot to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'briefly-telegram-bot'
      - '--image'
      - 'gcr.io/$PROJECT_ID/telegram-bot'
      - '--region'
      - 'europe-west1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--set-env-vars'
      - 'TELEGRAM_BOT_TOKEN=${_TELEGRAM_BOT_TOKEN},DATABASE_URL=${_DATABASE_URL}'

images:
  - 'gcr.io/$PROJECT_ID/news-collector'
  - 'gcr.io/$PROJECT_ID/telegram-bot' 